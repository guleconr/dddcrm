@model long
@(Html.Kendo().Grid<ResourcesVM>()
                    .Name("grid")
                    .Columns(columns => {
                        columns.ForeignKey(p => p.LanguageId, (System.Collections.IEnumerable)ViewData["languages"], "Id", "Name").Filterable(false).Width(150);
                        columns.Bound(p => p.Name);
                        columns.Bound(p => p.Value);
                        columns.Command(command => { command.Edit().Text(Localizer[LocalizationCaptions.Edit].Value); command.Destroy().Text(Localizer[LocalizationCaptions.Delete].Value); }).Width(250);
                    })
                     .Pageable(pager => pager.AlwaysVisible(true).PageSizes(new int[] { 5, 10, 20, 100 }))
                    .Sortable()
                    .Scrollable()
                    .Filterable()
                     .ToolBar(toolbar =>
                     {
                     })
                     .Editable(editable => editable.Mode(GridEditMode.InLine).ConfirmDelete(Localizer[LocalizationCaptions.ConfirmDelete].Value).DisplayDeleteConfirmation(Localizer[LocalizationCaptions.ConfirmDelete].Value))
                    .HtmlAttributes(new { style = "height:660px;" })
                    .DataSource(dataSource => dataSource
                       .Ajax()
                        .Batch(true)
                        .PageSize(10)
                        .ServerOperation(true)
                        .Events(events => events.Error("error_handler").RequestEnd("onGridRequestEnd").Sync("sync_handler"))
                        .Model(model => {
                            model.Id(p => p.Id); model.Field(p => p.Name).Editable(false);
                            model.Field(p => p.LanguageId).DefaultValue(1).Editable(false);
                        })
                        .Create("EditingResources_Create", "Definitions")
                        .Update("EditingResources_Update", "Definitions")
                        .Destroy("EditingResources_Destroy", "Definitions")
                        .Read(read => read.Action("Get_Resources", "Definitions",new { languageId = Model}))
                     )
                )

