{"version":3,"sources":["kendo.datetimepicker.js"],"names":["f","define","$","undefined","lastTimeOption","interval","date","Date","setMinutes","preventDefault","e","normalize","options","timeFormat","patterns","kendo","getCulture","culture","calendars","standard","parseFormats","length","format","extractFormat","g","t","DateView","unshift","inArray","push","window","TimeView","parse","parseDate","support","activeElement","_activeElement","_extractFormat","calendar","isInRange","restrictValue","isEqualDatePart","getMilliseconds","ui","Widget","OPEN","CLOSE","CHANGE","ns","CLICK","UP","mouseAndTouchPresent","applyEventMap","slice","DISABLED","READONLY","DEFAULT","FOCUSED","HOVER","STATEDISABLED","HOVEREVENTS","MOUSEDOWN","MONTH","SPAN","ARIA_ACTIVEDESCENDANT","ARIA_EXPANDED","ARIA_HIDDEN","ARIA_OWNS","ARIA_DISABLED","DATE","MIN","MAX","dateViewParams","view","timeViewParams","extend","SINGLE_POPUP_TEMPLATE","STATE_ACTIVE","DateTimePicker","init","element","disabled","that","this","componentType","fn","call","disableDates","min","attr","max","_specifiedRange","_initialOptions","_wrapper","singlePopup","_popup","_views","_icons","_reset","_template","setAttribute","type","addClass","role","aria-expanded","autocomplete","_midnight","_calculateMidnight","is","parents","enable","readonly","_createDateInput","_old","_update","value","val","_oldText","notify","name","dates","height","footer","start","depth","animation","month","ARIATemplate","dateButtonText","timeButtonText","dateInput","weekNumber","events","componentTypes","classic","timeView","list","modern","setOptions","currentValue","_value","dateView","_current","_dateInput","toString","_updateARIA","_editable","off","dateIcon","_dateIcon","timeIcon","_timeIcon","wrapper","_inputWrapper","disable","removeClass","on","_toggleHover","removeAttribute","proxy","_keydown","_change","current","getToday","close","toggle","_focusElement","eventType","touch","match","trigger","destroy","popup","_form","_resetHandler","open","popupHovered","_calendar","ul","find","bind","_hovered","_switchToTimeView","_switchToDateView","setTimeout","_option","visible","secondView","dateChanged","valueUpdated","textFormatted","oldValue","_typing","option","minDateEqual","maxDateEqual","timeViewOptions","getTime","dataBind","currentTarget","toggleClass","rebind","old","skip","formattedValue","isSameType","String","grep","d","isDateViewVisible","stopPropagation","stopImmediatePropagation","altKey","keyCode","keys","DOWN","move","ENTER","div","msMin","timeDiv","omitPopup","id","dateDiv","anchor","change","_applyDateValue","_currentlySelected","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","_toggleIcons","_dateViewID","validateDate","_applyTimeValue","_timeSelected","_adjustListWidth","_updateTitle","_timeViewID","active","_optionID","useValueToRender","specifiedRange","adjustedDate","msValue","msMax","setHours","_parse","icons","next","insertAfter","children","eq","hide","wrap","parent","style","cssText","css","width","className","firstChild","formId","form","closest","disabledDate","optionsValue","initialValue","defaultValue","_ariaTemplate","template","DateInput","cell","_cell","appendTo","document","body","append","Popup","isRtl","activate","addTranslate","applyValue","_updateRanges","_groupChangeClick","_cancelClickHandler","_setClickHandler","button","index","time","_updateCurrentlySelected","getHours","getMinutes","setSeconds","getSeconds","plugin","jQuery","amd","a1","a2","a3"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;CAwBC,SAAUA,EAAGC,QACVA,OAAO,wBACH,mBACA,oBACDD,IACL,WAgwBE,MArvBC,UAAUE,EAAGC,GA+tBV,QAASC,GAAeC,GACpB,GAAIC,GAAO,GAAIC,MAAK,KAAM,EAAG,EAE7B,OADAD,GAAKE,YAAYH,GACVC,EAEX,QAASG,GAAeC,GACpBA,EAAED,iBAEN,QAASE,GAAUC,GACf,GAA2HC,GAAvHC,EAAWC,EAAMC,WAAWJ,EAAQK,SAASC,UAAUC,SAASL,SAAUM,GAAgBR,EAAQQ,aAAaC,MACnHT,GAAQU,OAASC,EAAcX,EAAQU,QAAUR,EAASU,GAC1DZ,EAAQC,WAAaA,EAAaU,EAAcX,EAAQC,YAAcC,EAASW,GAC/EV,EAAMW,SAASf,UAAUC,GACrBQ,GACAR,EAAQQ,aAAaO,QAAQ,uBAE7BzB,EAAE0B,QAAQf,EAAYD,EAAQQ,oBAC9BR,EAAQQ,aAAaS,KAAKhB,GAhvBrC,GACOE,GAAQe,OAAOf,MAAOgB,EAAWhB,EAAMgB,SAAUC,EAAQjB,EAAMkB,UAAWC,EAAUnB,EAAMmB,QAASC,EAAgBpB,EAAMqB,eAAgBb,EAAgBR,EAAMsB,eAAgBC,EAAWvB,EAAMuB,SAAUC,EAAYD,EAASC,UAAWC,EAAgBF,EAASE,cAAeC,EAAkBH,EAASG,gBAAiBC,EAAkBX,EAASW,gBAAiBC,EAAK5B,EAAM4B,GAAIC,EAASD,EAAGC,OAAQC,EAAO,OAAQC,EAAQ,QAASC,EAAS,SAAUC,EAAK,uBAAwBC,EAAQ,QAAUD,EAAIE,EAAKhB,EAAQiB,qBAAuBpC,EAAMqC,cAAc,KAAMJ,EAAGK,MAAM,IAAMJ,EAAOK,EAAW,WAAYC,EAAW,WAAYC,EAAU,kBAAmBC,EAAU,kBAAmBC,EAAQ,gBAAiBC,EAAgB,mBAAoBC,EAAc,aAAeZ,EAAK,cAAgBA,EAAIa,EAAY,YAAcb,EAAIc,EAAQ,QAASC,EAAO,UAAWC,EAAwB,wBAAyBC,EAAgB,gBAAiBC,EAAc,cAAeC,EAAY,YAAaC,EAAgB,gBAAiBC,EAAO9D,KAAM+D,EAAM,GAAID,GAAK,KAAM,EAAG,GAAIE,EAAM,GAAIF,GAAK,KAAM,GAAI,IAAKG,GAAmBC,KAAM,QAAUC,GAAmBD,KAAM,QAAUE,EAASzE,EAAEyE,OAAQC,EAAwB,+mBAAqsBC,EAAe,iBACx5DC,EAAiBlC,EAAO+B,QACxBI,KAAM,SAAUC,EAASpE,GACrB,GAAiBqE,GAAbC,EAAOC,IACXvE,GAAUA,MACVA,EAAQwE,cAAgBxE,EAAQwE,eAAiB,UACjDxC,EAAOyC,GAAGN,KAAKO,KAAKJ,EAAMF,EAASpE,GACnCoE,EAAUE,EAAKF,QACfpE,EAAUsE,EAAKtE,QACfA,EAAQ2E,aAAexE,EAAMuB,SAAS2C,SAASrE,EAAQ2E,cACvD3E,EAAQ4E,IAAMxD,EAAMgD,EAAQS,KAAK,SAAWzD,EAAMpB,EAAQ4E,KAC1D5E,EAAQ8E,IAAM1D,EAAMgD,EAAQS,KAAK,SAAWzD,EAAMpB,EAAQ8E,MACrD9E,EAAQ8E,MAAQnB,IAAQ3D,EAAQ4E,MAAQlB,IACzCa,KAAKQ,iBAAkB,GAE3BhF,EAAUC,GACVsE,EAAKU,gBAAkBjB,KAAW/D,GAClCsE,EAAKW,WACDjF,EAAQkF,aACRZ,EAAKa,SAETb,EAAKc,SACLd,EAAKe,SACLf,EAAKgB,SACLhB,EAAKiB,WACL,KACInB,EAAQ,GAAGoB,aAAa,OAAQ,QAClC,MAAO1F,GACLsE,EAAQ,GAAGqB,KAAO,OAEtBrB,EAAQsB,SAAS,WAAWb,MACxBc,KAAQ,WACRC,iBAAiB,EACjBC,aAAgB,QAEpBvB,EAAKwB,UAAYxB,EAAKyB,mBAAmB/F,EAAQ4E,IAAK5E,EAAQ8E,KAC9DT,EAAWD,EAAQ4B,GAAG,eAAiB1G,EAAEgF,EAAKF,SAAS6B,QAAQ,YAAYD,GAAG,aAC1E3B,EACAC,EAAK4B,QAAO,GAEZ5B,EAAK6B,SAAS/B,EAAQ4B,GAAG,eAE7B1B,EAAK8B,iBAAiBpG,GACtBsE,EAAK+B,KAAO/B,EAAKgC,QAAQtG,EAAQuG,OAASjC,EAAKF,QAAQoC,OACvDlC,EAAKmC,SAAWrC,EAAQoC,MACxBrG,EAAMuG,OAAOpC,IAEjBtE,SACI2G,KAAM,iBACNJ,MAAO,KACP7F,OAAQ,GACRT,WAAY,GACZI,QAAS,GACTG,gBACAoG,SACAjC,aAAc,KACdC,IAAK,GAAInB,GAAKC,GACdoB,IAAK,GAAIrB,GAAKE,GACdlE,SAAU,GACVoH,OAAQ,IACRC,OAAQ,GACRC,MAAO7D,EACP8D,MAAO9D,EACP+D,aACAC,SACAC,aAAc,+DACdC,eAAgB,qBAChBC,eAAgB,qBAChBC,WAAW,EACXC,YAAY,GAEhBC,QACIvF,EACAC,EACAC,GAEJsF,gBACIC,SACIxC,aAAa,EACbyC,UAAYC,KAAM,SAEtBC,QACI3C,aAAa,EACbyC,UAAYC,KAAM,YAG1BE,WAAY,SAAU9H,GAClB,GAAsC4E,GAAKE,EAAKiD,EAA5CzD,EAAOC,KAAMgC,EAAQjC,EAAK0D,MAC9BhG,GAAOyC,GAAGqD,WAAWpD,KAAKJ,EAAMtE,GAChCA,EAAUsE,EAAKtE,QACfA,EAAQ4E,IAAMA,EAAMxD,EAAMpB,EAAQ4E,KAClC5E,EAAQ8E,IAAMA,EAAM1D,EAAMpB,EAAQ8E,KAClC/E,EAAUC,GACVsE,EAAKwB,UAAYxB,EAAKyB,mBAAmB/F,EAAQ4E,IAAK5E,EAAQ8E,KAC9DiD,EAAe/H,EAAQuG,OAASjC,EAAK0D,QAAU1D,EAAK2D,SAASC,SACzDtD,IAAQ/C,EAAgB+C,EAAKmD,KAC7BnD,EAAM,GAAInB,GAAKC,IAEfoB,IAAQjD,EAAgBiD,EAAKiD,KAC7BjD,EAAM,GAAIrB,GAAKE,IAEnBW,EAAK2D,SAASH,WAAW9H,GACzBsE,EAAKqD,SAASG,WAAW/D,KAAW/D,GAChCU,OAAQV,EAAQC,WAChB2E,IAAKA,EACLE,IAAKA,KAETR,EAAK8B,iBAAiBpG,GACjBsE,EAAK6D,YACN7D,EAAKF,QAAQoC,IAAIrG,EAAMiI,SAAS7B,EAAOvG,EAAQU,OAAQV,EAAQK,UAE/DkG,GACAjC,EAAK+D,YAAY9B,IAGzB+B,UAAW,SAAUtI,GACjB,GAAIsE,GAAOC,KAAMH,EAAUE,EAAKF,QAAQmE,IAAInG,GAAKoG,EAAWlE,EAAKmE,UAAUF,IAAInG,GAAKsG,EAAWpE,EAAKqE,UAAUJ,IAAInG,GAAKwG,EAAUtE,EAAKuE,cAAcN,IAAInG,GAAK+D,EAAWnG,EAAQmG,SAAU2C,EAAU9I,EAAQ8I,OACvM3C,IAAa2C,GAgCdF,EAAQlD,SAASoD,EAAU/F,EAAgBH,GAASmG,YAAYD,EAAUlG,EAAUG,GACpFqB,EAAQS,KAAKnC,EAAUoG,GAASjE,KAAKlC,EAAUwD,GAAUtB,KAAKrB,EAAesF,KAhC7EF,EAAQlD,SAAS9C,GAASmG,YAAYhG,GAAeiG,GAAGhG,EAAasB,EAAK2E,cACtE7E,GAAWA,EAAQ3D,SACnB2D,EAAQ,GAAG8E,gBAAgBxG,GAC3B0B,EAAQ,GAAG8E,gBAAgBvG,GAAU,GACrCyB,EAAQ,GAAG8E,gBAAgB1F,GAAe,IAE9CY,EAAQ4E,GAAG,UAAY5G,EAAI9C,EAAE6J,MAAM7E,EAAK8E,SAAU9E,IAAO0E,GAAG,QAAU5G,EAAI,WACtEkC,EAAKuE,cAAcnD,SAAS7C,KAC7BmG,GAAG,WAAa5G,EAAI,WACnBkC,EAAKuE,cAAcE,YAAYlG,GAC3BuB,EAAQoC,QAAUlC,EAAKmC,WACvBnC,EAAK+E,QAAQjF,EAAQoC,OAChBpC,EAAQoC,OACTlC,EAAK2D,SAASqB,QAAQnJ,EAAMuB,SAAS6H,aAGzCjF,EAAKtE,QAAQkF,cAGjBZ,EAAKkF,MAAM,QACXlF,EAAKkF,MAAM,WAEfhB,EAASQ,GAAG/F,EAAWpD,GAAgBmJ,GAAG1G,EAAI,SAAUxC,GACpDwE,EAAKmF,OAAO,QACZnF,EAAKoF,cAAc5J,EAAE2F,QAEzBiD,EAASM,GAAG/F,EAAWpD,GAAgBmJ,GAAG1G,EAAI,SAAUxC,GACpDwE,EAAKmF,OAAO,QACZnF,EAAKoF,cAAc5J,EAAE2F,UAOjCiE,cAAe,SAAUC,GACrB,GAAIvF,GAAUG,KAAKH,OACb9C,GAAQsI,SAAStI,EAAQiB,uBAA0BoH,GAAa,IAAIE,MAAM,YAAczF,EAAQ,KAAO7C,KACzG6C,EAAQ0F,QAAQ,UAGxB3D,SAAU,SAAUA,GAChB5B,KAAK+D,WACDnC,SAAUA,IAAa5G,GAAmB4G,EAC1C2C,SAAS,KAGjB5C,OAAQ,SAAUA,GACd3B,KAAK+D,WACDnC,UAAU,EACV2C,UAAW5C,EAASA,IAAW3G,GAAmB2G,MAG1D6D,QAAS,WACL,GAAIzF,GAAOC,IACXvC,GAAOyC,GAAGsF,QAAQrF,KAAKJ,GACvBA,EAAK2D,SAAS8B,UACdzF,EAAKqD,SAASoC,UACVzF,EAAKtE,QAAQkF,cACbZ,EAAK0F,MAAM5F,QAAQmE,IAAInG,GACvBkC,EAAK0F,MAAMD,WAEfzF,EAAKF,QAAQmE,IAAInG,GACjBkC,EAAKmE,UAAUF,IAAInG,GACnBkC,EAAKqE,UAAUJ,IAAInG,GACnBkC,EAAKuE,cAAcN,IAAInG,GACnBkC,EAAK2F,OACL3F,EAAK2F,MAAM1B,IAAI,QAASjE,EAAK4F,gBAGrCV,MAAO,SAAU3F,GACTU,KAAKvE,QAAQkF,YACbX,KAAKyF,MAAMR,SAEE,SAAT3F,IACAA,EAAO,QAEXU,KAAKV,EAAO,QAAQ2F,UAG5BW,KAAM,SAAUtG,GAAV,GAEEuG,GADA9F,EAAOC,IAEPD,GAAKtE,QAAQkF,aACbZ,EAAK2D,SAASoC,YACV/F,EAAKqD,SAAS2C,GAAGC,KAAK,MAAM9J,OAAS,GACrC6D,EAAKqD,SAAS6C,OAElBJ,EAAe9F,EAAK0F,MAAMS,SAC1BnG,EAAK0F,MAAMS,UAAW,EACtBnG,EAAK0F,MAAMG,OACE,SAATtG,EACAS,EAAKoG,oBAELpG,EAAKqG,oBAETpG,KAAKkE,UAAUgB,OAAgB,SAAT5F,GACtBU,KAAKoE,UAAUc,OAAgB,SAAT5F,GACtB+G,WAAW,WACPtG,EAAK0F,MAAMS,SAAWL,GACvB,KAEU,SAATvG,IACAA,EAAO,QAEXU,KAAKV,EAAO,QAAQsG,SAG5BvF,IAAK,SAAU2B,GACX,MAAOhC,MAAKsG,QAAQ,MAAOtE,IAE/BzB,IAAK,SAAUyB,GACX,MAAOhC,MAAKsG,QAAQ,MAAOtE,IAE/BkD,OAAQ,SAAU5F,GACd,GAAIU,KAAKvE,QAAQkF,YACTX,KAAKyF,MAAMc,UACXvG,KAAKiF,QAELjF,KAAK4F,KAAKtG,OAEX,CACH,GAAIkH,GAAa,UACJ,UAATlH,EACAA,EAAO,OAEPkH,EAAa,WAEjBxG,KAAKV,EAAO,QAAQ4F,SACpBlF,KAAKwG,GAAYvB,UAGzBjD,MAAO,SAAUA,GACb,GAAIjC,GAAOC,IACX,OAAIgC,KAAUhH,EACH+E,EAAK0D,QAEhB1D,EAAK+B,KAAO/B,EAAKgC,QAAQC,GACP,OAAdjC,EAAK+B,MACL/B,EAAKF,QAAQoC,IAAI,IAErBlC,EAAKmC,SAAWnC,EAAKF,QAAQoC,MAJ7BlC,IAMJ+E,QAAS,SAAU9C,GAAV,GAC2CyE,GAG5CC,EACAC,EAJA5G,EAAOC,KAAM4G,EAAW7G,EAAKF,QAAQoC,KACzCD,GAAQjC,EAAKgC,QAAQC,GACrByE,GAAe1G,EAAK+B,OAASE,EACzB0E,EAAeD,IAAgB1G,EAAK8G,QACpCF,EAAgBC,IAAa7G,EAAKF,QAAQoC,OAC1CyE,GAAgBC,IAChB5G,EAAKF,QAAQ0F,QAAQ3H,GAErB6I,IACA1G,EAAK+B,KAAOE,EACZjC,EAAKmC,SAAWnC,EAAKF,QAAQoC,MAC7BlC,EAAKwF,QAAQ3H,IAEjBmC,EAAK8G,SAAU,GAEnBP,QAAS,SAAUQ,EAAQ9E,GAAlB,GAMD+E,GACAC,EANAjH,EAAOC,KACPvE,EAAUsE,EAAKtE,QACf2H,EAAWrD,EAAKqD,SAChB6D,EAAkB7D,EAAS3H,QAC3BsJ,EAAUhF,EAAK0D,QAAU1D,EAAK+B,IAGlC,IAAIE,IAAUhH,EACV,MAAOS,GAAQqL,EAGnB,IADA9E,EAAQnF,EAAMmF,EAAOvG,EAAQQ,aAAcR,EAAQK,SACnD,CAaA,GAVIL,EAAQ4E,IAAI6G,YAAczL,EAAQ8E,IAAI2G,YACtCD,EAAgB5E,UAEpB5G,EAAQqL,GAAU,GAAI5H,GAAK8C,EAAMkF,WACjCnH,EAAK2D,SAASoD,GAAQ9E,GACtBjC,EAAKwB,UAAYxB,EAAKyB,mBAAmB/F,EAAQ4E,IAAK5E,EAAQ8E,KAC1DwE,IACAgC,EAAezJ,EAAgB7B,EAAQ4E,IAAK0E,GAC5CiC,EAAe1J,EAAgB7B,EAAQ8E,IAAKwE,IAE5CgC,GAAgBC,GAKhB,GAJAC,EAAgBH,GAAU9E,EACtB+E,IAAiBC,IACjBC,EAAgB1G,IAAMtF,EAAeQ,EAAQP,WAE7C8L,EAAc,CACd,GAAIjH,EAAKwB,UAEL,MADA6B,GAAS+D,UAAU/H,IACnB,CACQ2H,KACRE,EAAgB5G,IAAMlB,QAI9B8H,GAAgB1G,IAAMnB,EACtB6H,EAAgB5G,IAAMlB,CAE1BiE,GAAS6C,SAEbvB,aAAc,SAAUnJ,GACpBR,EAAEQ,EAAE6L,eAAeC,YAAY9I,EAAkB,eAAXhD,EAAE2F,OAE5Ca,QAAS,SAAUC,GACf,GAAsTsF,GAAQL,EAAiBM,EAAKC,EAAMC,EAAtV1H,EAAOC,KAAMvE,EAAUsE,EAAKtE,QAAS4E,EAAM5E,EAAQ4E,IAAKE,EAAM9E,EAAQ8E,IAAK8B,EAAQ5G,EAAQ4G,MAAOe,EAAWrD,EAAKqD,SAAU2B,EAAUhF,EAAK0D,OAAQtI,EAAO0B,EAAMmF,EAAOvG,EAAQQ,aAAcR,EAAQK,SAAU4L,EAAsB,OAATvM,GAA6B,OAAZ4J,GAAoB5J,YAAgBC,OAAQ2J,YAAmB3J,KAOhT,OANIK,GAAQ2E,cAAgB3E,EAAQ2E,aAAajF,KAC7CA,EAAO,KACF4E,EAAK+B,MAAS/B,EAAKF,QAAQoC,QAC5BD,EAAQ,QAGX7G,KAAU4J,GAAW2C,GACtBD,EAAiB7L,EAAMiI,SAAS1I,EAAMM,EAAQU,OAAQV,EAAQK,SAC1D2L,IAAmBzF,IACnBjC,EAAKF,QAAQoC,IAAa,OAAT9G,EAAgB6G,EAAQyF,GACrCzF,YAAiB2F,SACjB5H,EAAKF,QAAQ0F,QAAQ3H,IAGtBzC,IAEE,OAATA,GAAiBmC,EAAgBnC,EAAMkF,GACvClF,EAAOkC,EAAclC,EAAMkF,EAAKE,GACxBnD,EAAUjC,EAAMkF,EAAKE,KAC7BpF,EAAO,MAEX4E,EAAK0D,OAAStI,EACdiI,EAASpB,MAAM7G,GACf4E,EAAK2D,SAAS1B,MAAM7G,GAChBA,IACAoM,EAAMxH,EAAK+B,KACXmF,EAAkB7D,EAAS3H,QACvB4G,EAAM,KACNA,EAAQtH,EAAE6M,KAAKvF,EAAO,SAAUwF,GAC5B,MAAOvK,GAAgBnC,EAAM0M,KAE7BxF,EAAM,KACNe,EAAS+D,SAAS9E,GAClBmF,GAAO,IAGVA,IACGlK,EAAgBnC,EAAMkF,KACtB4G,EAAgB5G,IAAMA,EACtB4G,EAAgB1G,IAAMtF,EAAeQ,EAAQP,UAC7CoM,GAAS,GAEThK,EAAgBnC,EAAMoF,KAClBR,EAAKwB,WACL6B,EAAS+D,UAAU/H,IACnBoI,GAAO,IAEPP,EAAgB1G,IAAMA,EACjB+G,IACDL,EAAgB5G,IAAMlB,GAE1BmI,GAAS,MAIhBE,KAAUD,GAAOD,GAAUC,IAAQjK,EAAgBiK,EAAKpM,MACpDmM,IACDL,EAAgB1G,IAAMnB,EACtB6H,EAAgB5G,IAAMlB,GAE1BiE,EAAS6C,SAGblG,EAAK6D,YAAczI,EACnB4E,EAAK6D,WAAW5B,MAAM7G,GAAQ6G,GAE9BjC,EAAKF,QAAQoC,IAAIrG,EAAMiI,SAAS1I,GAAQ6G,EAAOvG,EAAQU,OAAQV,EAAQK,UAE3EiE,EAAK+D,YAAY3I,GACVA,IAEX0J,SAAU,SAAUtJ,GAAV,GACFwE,GAAOC,KAAM0D,EAAW3D,EAAK2D,SAAUN,EAAWrD,EAAKqD,SAAUpB,EAAQjC,EAAKF,QAAQoC,MAAO6F,EAAoB/H,EAAKtE,QAAQkF,YAAcZ,EAAK0F,MAAMc,UAAY7C,EAAS+B,MAAMc,UAClLwB,EAAkBhI,EAAK6D,YAAcrI,EAAEyM,wBACvCzM,GAAE0M,QAAU1M,EAAE2M,UAAYtM,EAAMuM,KAAKC,KACrCrI,EAAKmF,OAAO4C,EAAoB,OAAS,QAClCA,GACPpE,EAAS2E,KAAK9M,GACdwE,EAAK+D,YAAYJ,EAASC,YAClB5D,EAAKtE,QAAQkF,aAAeyC,EAASqC,MAAMc,UACnDnD,EAASiF,KAAK9M,GACPA,EAAE2M,UAAYtM,EAAMuM,KAAKG,OAAStG,IAAUjC,EAAKmC,SACxDnC,EAAK+E,QAAQ9C,IAEbjC,EAAK8G,SAAU,EACfkB,GAAkB,GAElBA,GACAxM,EAAEyM,4BAGVnH,OAAQ,WACJ,GAA0F6C,GAAUN,EAAUmF,EAAKxC,EAAIyC,EAAOrN,EAAMsN,EAASC,EAAWzB,EAApJlH,EAAOC,KAAMH,EAAUE,EAAKF,QAASpE,EAAUsE,EAAKtE,QAASkN,EAAK9I,EAAQS,KAAK,KAC/E7E,GAAQkF,cACRlF,EAAQmN,QAAU7I,EAAK0F,MAAM5F,QAAQmG,KAAK,6BAC1CyC,EAAU1I,EAAK0F,MAAM5F,QAAQmG,KAAK,yBAClCvK,EAAQiN,UAAYA,GAAY,EAChCzB,EAAkBxL,EAAQ2H,UAE9BrD,EAAK2D,SAAWA,EAAW,GAAI9H,GAAMW,SAASiD,KAAW/D,GACrDkN,GAAIA,EACJE,OAAQ9I,EAAKsE,QACbyE,OAAQ,WACJ,GAAI9G,GAAQjC,EAAKgJ,iBACbtN,GAAQkF,aACHZ,EAAKqD,SAAS4F,qBACfjJ,EAAKqD,SAAS4F,mBAAqB,GAAI5N,OAE3C2E,EAAKqD,SAAS4F,mBAAmBC,YAAYjH,EAAMkH,eACnDnJ,EAAKqD,SAAS4F,mBAAmBG,SAASnH,EAAMoH,YAChDrJ,EAAKqD,SAAS4F,mBAAmBK,QAAQrH,EAAMsH,WAC/CvJ,EAAKoG,oBACLpG,EAAKwJ,iBAELxJ,EAAK+E,QAAQ9C,GACbjC,EAAKkF,MAAM,UAGnBA,MAAO,SAAU1J,GACTwE,EAAKwF,QAAQ5H,EAAO0B,GACpB9D,EAAED,kBAEFuE,EAAQS,KAAKxB,GAAe,GAC5ByJ,EAAIjI,KAAKvB,GAAa,GACjBgB,EAAKtE,QAAQkF,aAAgByC,EAASqC,MAAMc,WACzC1G,GAAWA,EAAQ3D,QACnB2D,EAAQ,GAAG8E,gBAAgB3F,KAK3C4G,KAAM,SAAUrK,GACRwE,EAAKwF,QAAQ7H,EAAM2B,GACnB9D,EAAED,kBAEEuE,EAAQoC,QAAUlC,EAAKmC,WACvB/G,EAAO0B,EAAMgD,EAAQoC,MAAOxG,EAAQQ,aAAcR,EAAQK,SAC1DiE,EAAK2D,SAASvI,EAAO,UAAY,SAASA,IAE9CoN,EAAIjI,KAAKvB,GAAa,GACtBc,EAAQS,KAAKxB,GAAe,GAAMwB,KAAKtB,EAAW0E,EAAS8F,aAC3DzJ,EAAK+D,YAAY3I,QAI7BoN,EAAM7E,EAAS6E,IACfC,EAAQ/M,EAAQ4E,IAAI6G,UACpBnH,EAAKqD,SAAWA,EAAW,GAAIxG,IAC3B+L,GAAIA,EACJ3G,MAAOvG,EAAQuG,MACf6G,OAAQ9I,EAAKsE,QACb3B,UAAWjH,EAAQiH,UACnBvG,OAAQV,EAAQC,WAChBI,QAASL,EAAQK,QACjBwG,OAAkC,WAA1B7G,EAAQwE,cAA6B,KAAOxE,EAAQ6G,OAC5DpH,SAAUO,EAAQP,SAClBmF,IAA+B,WAA1B5E,EAAQwE,cAA6BxE,EAAQ4E,IAAM,GAAInB,GAAKC,GACjEoB,IAA+B,WAA1B9E,EAAQwE,cAA6BxE,EAAQ8E,IAAM,GAAIrB,GAAKE,GACjEiD,MAAOmG,IAAU/M,EAAQ8E,IAAI2G,WAAa,GAAI9L,MAAKoN,OACnDvM,aAAcR,EAAQQ,aACtBwN,cAAc,EACdX,OAAQ,SAAU9G,EAAOuD,GACrBvD,EAAQjC,EAAK2J,gBAAgB1H,GACzBuD,GACAxF,EAAK4J,eAAgB,EACrB5J,EAAK+E,QAAQ9C,KAEbnC,EAAQoC,IAAIrG,EAAMiI,SAAS7B,EAAOvG,EAAQU,OAAQV,EAAQK,UAC1D4H,EAAS1B,MAAMA,GACfjC,EAAK+D,YAAY9B,KAGzBiD,MAAO,SAAU1J,GACTwE,EAAKwF,QAAQ5H,EAAO4B,GACpBhE,EAAED,kBAEFyK,EAAGzF,KAAKvB,GAAa,GACrBc,EAAQS,KAAKxB,GAAe,GACvB4E,EAAS+B,MAAMc,WACZ1G,GAAWA,EAAQ3D,QACnB2D,EAAQ,GAAG8E,gBAAgB3F,KAK3C4G,KAAM,SAAUrK,GACuB,WAA/BwE,EAAKtE,QAAQwE,cACbmD,EAASwG,mBAET7J,EAAKqD,SAASyG,eAEd9J,EAAKwF,QAAQ7H,EAAM6B,GACnBhE,EAAED,kBAEEuE,EAAQoC,QAAUlC,EAAKmC,WACvB/G,EAAO0B,EAAMgD,EAAQoC,MAAOxG,EAAQQ,aAAcR,EAAQK,SAC1DiE,EAAKqD,SAASpB,MAAM7G,IAExB4K,EAAGzF,KAAKvB,GAAa,GACrBc,EAAQS,KAAKxB,GAAe,GAAMwB,KAAKtB,EAAWoE,EAAS0G,aAC3D1G,EAAS3H,QAAQsO,OAAO3G,EAAS2B,aAGzCgF,OAAQ,SAAUhF,GACVlF,GAAWA,EAAQ3D,QACnB2D,EAAQ,GAAG8E,gBAAgB9F,GAE3BkG,GACAlF,EAAQS,KAAKzB,EAAuBuE,EAAS4G,YAGrDvE,MAAOhK,EAAQgK,MACfwE,kBAAkB,EAClBC,eAAgBnK,EAAKS,gBACrBkI,UAAWA,EACXD,QAASA,EACTrF,SAAU6D,IAEdlB,EAAK3C,EAAS2C,IAElBgD,gBAAiB,WAAA,GAQThE,GAASoF,EAPTpK,EAAOC,KACPvE,EAAUsE,EAAKtE,QACfiI,EAAW3D,EAAK2D,SAChB1B,EAAQ0B,EAASvG,SAAS6E,QAC1BoI,GAAWpI,EACXwG,GAAS/M,EAAQ4E,IACjBgK,GAAS5O,EAAQ8E,GAgBrB,OAdI6J,KAAY5B,GAAS4B,IAAYC,IACjCtF,EAAUqF,IAAY5B,EAAQA,EAAQ6B,EACtCtF,EAAU,GAAI7F,GAAKa,EAAK0D,QAAUsB,GAClCA,EAAQkE,YAAYjH,EAAMkH,cAAelH,EAAMoH,WAAYpH,EAAMsH,WAC7DlM,EAAU2H,EAASyD,EAAO6B,KAC1BrI,EAAQ+C,IAGZhF,EAAK0D,SACL0G,EAAevO,EAAMT,KAAKmP,SAAS,GAAIlP,MAAK4G,GAAQjC,EAAK0D,QACrDrG,EAAU+M,EAAc3B,EAAO6B,KAC/BrI,EAAQmI,IAGTnI,GAEX0H,gBAAiB,SAAU1H,GAAV,GACToB,GAAWpD,KAAKoD,SAChB3H,EAAUuE,KAAKvE,OASnB,OARAuG,GAAQoB,EAASmH,OAAOvI,GACpBA,EAAQvG,EAAQ4E,KAChB2B,EAAQ,GAAI9C,KAAMzD,EAAQ4E,MAC1B+C,EAAS3H,QAAQ4E,IAAM2B,GAChBA,EAAQvG,EAAQ8E,MACvByB,EAAQ,GAAI9C,KAAMzD,EAAQ8E,MAC1B6C,EAAS3H,QAAQ8E,IAAMyB,GAEpBA,GAEXlB,OAAQ,WAAA,GACAf,GAAOC,KACPH,EAAUE,EAAKF,QACfpE,EAAUsE,EAAKtE,QACf+O,EACI3K,EAAQ4K,KAAK,gBAChBD,GAAM,KACPA,EAAQzP,EAAE,yFAAgGU,EAAQoH,eAAiB,oHAA2HpH,EAAQqH,eAAiB,4EAAiF4H,YAAY7K,IAExX2K,EAAQA,EAAMG,WACd5K,EAAKmE,UAAYsG,EAAMI,GAAG,GAAGtK,KAAK,gBAAiBP,EAAK2D,SAAS8F,aACjEzJ,EAAKqE,UAAYoG,EAAMI,GAAG,GAAGtK,KAAK,gBAAiBP,EAAKqD,SAAS0G,aAC7DrO,EAAQkF,aACRZ,EAAKqE,UAAUyG,QAGvBnK,SAAU,WACN,GAAyC2D,GAArCtE,EAAOC,KAAMH,EAAUE,EAAKF,OAChCwE,GAAUxE,EAAQ6B,QAAQ,qBACrB2C,EAAQ,KACTA,EAAUxE,EAAQiL,KAAKlM,GAAMmM,SAAS5J,SAAS,iCAC/CkD,EAAUA,EAAQyG,KAAKlM,GAAMmM,UAEjC1G,EAAQ,GAAG2G,MAAMC,QAAUpL,EAAQ,GAAGmL,MAAMC,QAC5CpL,EAAQqL,KACJC,MAAO,OACP7I,OAAQzC,EAAQ,GAAGmL,MAAM1I,SAE7BvC,EAAKsE,QAAUA,EAAQlD,SAAS,6BAA6BA,SAAStB,EAAQ,GAAGuL,WAAW5G,YAAY,0BACxGzE,EAAKuE,cAAgBvJ,EAAEsJ,EAAQ,GAAGgH,aAEtCtK,OAAQ,WACJ,GAAIhB,GAAOC,KAAMH,EAAUE,EAAKF,QAASyL,EAASzL,EAAQS,KAAK,QAASiL,EAAOD,EAASvQ,EAAE,IAAMuQ,GAAUzL,EAAQ2L,QAAQ,QAAS/P,EAAUsE,EAAKtE,QAASgQ,EAAehQ,EAAQ2E,aAAcnE,EAAeR,EAAQQ,aAAaC,OAAST,EAAQQ,aAAe,KAAMyP,EAAe3L,EAAKU,gBAAgBuB,MAAO2J,EAAe9L,EAAQ,GAAG+L,YAC3UF,IAAiBD,GAAgBA,EAAaC,KAC9CA,EAAe,MAEbC,GAAiB/P,EAAMkB,UAAU6O,EAAc1P,EAAcR,EAAQK,WAAa4P,GACpF7L,EAAQS,KAAK,QAAS1E,EAAMiI,SAAS6H,EAAcjQ,EAAQU,OAAQV,EAAQK,UAE3EyP,EAAK,KACLxL,EAAK4F,cAAgB,WACjB5F,EAAKiC,MAAM0J,GAAgB7L,EAAQ,GAAG+L,cACtC7L,EAAKQ,IAAIR,EAAKU,gBAAgBF,KAC9BR,EAAKM,IAAIN,EAAKU,gBAAgBJ,MAElCN,EAAK2F,MAAQ6F,EAAK9G,GAAG,QAAS1E,EAAK4F,iBAG3C3E,UAAW,WACPhB,KAAK6L,cAAgBjQ,EAAMkQ,SAAS9L,KAAKvE,QAAQmH,eAErDf,iBAAkB,SAAUpG,GACpBuE,KAAK4D,aACL5D,KAAK4D,WAAW4B,UAChBxF,KAAK4D,WAAa,MAElBnI,EAAQsH,YACR/C,KAAK4D,WAAa,GAAIpG,GAAGuO,UAAU/L,KAAKH,SACpC/D,QAASL,EAAQK,QACjBK,OAAQV,EAAQU,OAChBkE,IAAK5E,EAAQ4E,IACbE,IAAK9E,EAAQ8E,IACbrF,SAAUO,EAAQP,aAI9BsG,mBAAoB,SAAUnB,EAAKE,GAC/B,MAAOhD,GAAgB8C,GAAO9C,EAAgBgD,KAAS,GAE3DuD,YAAa,SAAU3I,GAAV,GACL6Q,GACAjM,EAAOC,KACP7C,EAAW4C,EAAK2D,SAASvG,QACzB4C,GAAKF,SAAWE,EAAKF,QAAQ3D,QAC7B6D,EAAKF,QAAQ,GAAG8E,gBAAgB9F,GAEhC1B,IACA6O,EAAO7O,EAAS8O,MAChBD,EAAK1L,KAAK,aAAcP,EAAK8L,eAAgB9G,QAAS5J,GAAQgC,EAAS4H,aACvEhF,EAAKF,QAAQS,KAAKzB,EAAuBmN,EAAK1L,KAAK,SAG3DM,OAAQ,WAAA,GACAb,GAAOC,KACPvE,EAAUsE,EAAKtE,QACf8M,EAAMxN,EAAE,eAAeuF,KAAKvB,EAAa,QAAQoC,SAAS,wCAAwC+K,SAASC,SAASC,KACxH7D,GAAI8D,OAAO5M,GACXM,EAAK0F,MAAQ,GAAIjI,GAAG8O,MAAM/D,EAAK/I,EAAO/D,EAAQgK,MAAOhK,GACjD2G,KAAM,QACNmK,MAAO3Q,EAAMmB,QAAQwP,MAAMxM,EAAKsE,SAChCwE,OAAQ9I,EAAKsE,QACbmI,SAAU,WACFzM,EAAKtE,QAAQ2H,UAA2C,WAA/BrD,EAAKtE,QAAQ2H,SAASC,OAC/CtD,EAAKqD,SAASqJ,eACd1M,EAAKqD,SAASsJ,WAAW3M,EAAK0D,QAC9B1D,EAAKqD,SAASuJ,kBAGtB/G,KAAM,WACF7F,EAAKqD,SAASyG,mBAGtBtB,EAAI9D,GAAG3G,EAAQD,EAAI,oCAAqC9C,EAAE6J,MAAM7E,EAAK6M,kBAAmB7M,IACxFwI,EAAI9D,GAAG3G,EAAQD,EAAI,0CAA2C9C,EAAE6J,MAAM7E,EAAK8M,oBAAqB9M,IAChGwI,EAAI9D,GAAG3G,EAAQD,EAAI,0CAA2C9C,EAAE6J,MAAM7E,EAAK+M,iBAAkB/M,KAEjG6M,kBAAmB,SAAUrR,GAAV,GAEXwR,GACAC,CAFJ1R,GAAeC,GACXwR,EAAShS,EAAEQ,EAAE6L,eACb4F,EAAQD,EAAOC,QACfA,EACAhN,KAAKmG,oBAELnG,KAAKoG,oBAETpG,KAAKuJ,gBAETnD,kBAAmB,WACfpG,KAAKyF,MAAM5F,QAAQmG,KAAK,gCAAgCxB,YAAY9E,GAAckL,GAAG,GAAGzJ,SAASzB,GACjGM,KAAKyF,MAAM5F,QAAQmG,KAAK,oBAAoBxB,YAAY,cAAcrD,SAAS,eAEnFgF,kBAAmB,WACfnG,KAAKoD,SAASuJ,gBACd3M,KAAKyF,MAAM5F,QAAQmG,KAAK,gCAAgCxB,YAAY9E,GAAckL,GAAG,GAAGzJ,SAASzB,GACjGM,KAAKyF,MAAM5F,QAAQmG,KAAK,oBAAoBxB,YAAY,cAAcrD,SAAS,eAEnFoI,aAAc,WACVvJ,KAAKkE,UAAUgB,SACflF,KAAKoE,UAAUc,UAEnB2H,oBAAqB,WACb7M,KAAKyD,SACLzD,KAAKgC,MAAMhC,KAAKyD,QAChBzD,KAAK0D,SAAS1B,MAAMhC,KAAKyD,SAE7BzD,KAAKyF,MAAMR,SAEf6H,iBAAkB,WAAA,GACV9K,GAAQhC,KAAK+I,kBACbkE,EAAOjN,KAAKoD,SAAS4F,oBAAsB,GAAI5N,KACnD4G,GAAQA,GAAS,GAAI5G,MACrB4E,KAAKoD,SAAS8J,2BACdlL,EAAMsI,SAAS2C,EAAKE,YACpBnL,EAAM3G,WAAW4R,EAAKG,cACtBpL,EAAMqL,WAAWJ,EAAKK,cACtBtL,EAAQhC,KAAK0J,gBAAgB1H,GAC7BhC,KAAK8E,QAAQ9C,GACbhC,KAAKyF,MAAMR,UAuBnBzH,GAAG+P,OAAO5N,IACZhD,OAAOf,MAAM4R,QACR7Q,OAAOf,OACE,kBAAVd,SAAwBA,OAAO2S,IAAM3S,OAAS,SAAU4S,EAAIC,EAAIC,IACrEA,GAAMD","file":"kendo.datetimepicker.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.datetimepicker', [\n        'kendo.datepicker',\n        'kendo.timepicker'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'datetimepicker',\n        name: 'DateTimePicker',\n        category: 'web',\n        description: 'The DateTimePicker allows the end user to select a value from a calendar or a time drop-down list.',\n        depends: [\n            'datepicker',\n            'timepicker'\n        ]\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo, TimeView = kendo.TimeView, parse = kendo.parseDate, support = kendo.support, activeElement = kendo._activeElement, extractFormat = kendo._extractFormat, calendar = kendo.calendar, isInRange = calendar.isInRange, restrictValue = calendar.restrictValue, isEqualDatePart = calendar.isEqualDatePart, getMilliseconds = TimeView.getMilliseconds, ui = kendo.ui, Widget = ui.Widget, OPEN = 'open', CLOSE = 'close', CHANGE = 'change', ns = '.kendoDateTimePicker', CLICK = 'click' + ns, UP = support.mouseAndTouchPresent ? kendo.applyEventMap('up', ns.slice(1)) : CLICK, DISABLED = 'disabled', READONLY = 'readonly', DEFAULT = 'k-state-default', FOCUSED = 'k-state-focused', HOVER = 'k-state-hover', STATEDISABLED = 'k-state-disabled', HOVEREVENTS = 'mouseenter' + ns + ' mouseleave' + ns, MOUSEDOWN = 'mousedown' + ns, MONTH = 'month', SPAN = '<span/>', ARIA_ACTIVEDESCENDANT = 'aria-activedescendant', ARIA_EXPANDED = 'aria-expanded', ARIA_HIDDEN = 'aria-hidden', ARIA_OWNS = 'aria-owns', ARIA_DISABLED = 'aria-disabled', DATE = Date, MIN = new DATE(1800, 0, 1), MAX = new DATE(2099, 11, 31), dateViewParams = { view: 'date' }, timeViewParams = { view: 'time' }, extend = $.extend, SINGLE_POPUP_TEMPLATE = '<div class=\"k-date-tab k-datetime-wrap\">' + '<div class=\"k-datetime-buttongroup\">' + '<div class=\"k-button-group k-button-group-stretched\">' + '<button class=\"k-button k-state-active k-group-start\">Date</button>' + '<button class=\"k-button k-group-end\">Time</button>' + '</div>' + '</div>' + '<div class=\"k-datetime-selector\">' + '<div class=\"k-datetime-calendar-wrap\">' + '</div>' + '<div class=\"k-datetime-time-wrap\">' + '</div>' + '</div>' + '<div class=\"k-datetime-footer k-action-buttons\">' + '<button class=\"k-button k-time-cancel\" title=\"Cancel\" aria-label=\"Cancel\">Cancel</button>' + '<button class=\"k-time-accept k-button k-primary\" title=\"Set\" aria-label=\"Set\">Set</button>' + '</div>' + '</div>', STATE_ACTIVE = 'k-state-active';\n        var DateTimePicker = Widget.extend({\n            init: function (element, options) {\n                var that = this, disabled;\n                options = options || {};\n                options.componentType = options.componentType || 'classic';\n                Widget.fn.init.call(that, element, options);\n                element = that.element;\n                options = that.options;\n                options.disableDates = kendo.calendar.disabled(options.disableDates);\n                options.min = parse(element.attr('min')) || parse(options.min);\n                options.max = parse(element.attr('max')) || parse(options.max);\n                if (+options.max != +MAX || +options.min != +MIN) {\n                    this._specifiedRange = true;\n                }\n                normalize(options);\n                that._initialOptions = extend({}, options);\n                that._wrapper();\n                if (options.singlePopup) {\n                    that._popup();\n                }\n                that._views();\n                that._icons();\n                that._reset();\n                that._template();\n                try {\n                    element[0].setAttribute('type', 'text');\n                } catch (e) {\n                    element[0].type = 'text';\n                }\n                element.addClass('k-input').attr({\n                    'role': 'combobox',\n                    'aria-expanded': false,\n                    'autocomplete': 'off'\n                });\n                that._midnight = that._calculateMidnight(options.min, options.max);\n                disabled = element.is('[disabled]') || $(that.element).parents('fieldset').is(':disabled');\n                if (disabled) {\n                    that.enable(false);\n                } else {\n                    that.readonly(element.is('[readonly]'));\n                }\n                that._createDateInput(options);\n                that._old = that._update(options.value || that.element.val());\n                that._oldText = element.val();\n                kendo.notify(that);\n            },\n            options: {\n                name: 'DateTimePicker',\n                value: null,\n                format: '',\n                timeFormat: '',\n                culture: '',\n                parseFormats: [],\n                dates: [],\n                disableDates: null,\n                min: new DATE(MIN),\n                max: new DATE(MAX),\n                interval: 30,\n                height: 200,\n                footer: '',\n                start: MONTH,\n                depth: MONTH,\n                animation: {},\n                month: {},\n                ARIATemplate: 'Current focused date is #=kendo.toString(data.current, \"d\")#',\n                dateButtonText: 'Open the date view',\n                timeButtonText: 'Open the time view',\n                dateInput: false,\n                weekNumber: false\n            },\n            events: [\n                OPEN,\n                CLOSE,\n                CHANGE\n            ],\n            componentTypes: {\n                'classic': {\n                    singlePopup: false,\n                    timeView: { list: 'list' }\n                },\n                'modern': {\n                    singlePopup: true,\n                    timeView: { list: 'scroll' }\n                }\n            },\n            setOptions: function (options) {\n                var that = this, value = that._value, min, max, currentValue;\n                Widget.fn.setOptions.call(that, options);\n                options = that.options;\n                options.min = min = parse(options.min);\n                options.max = max = parse(options.max);\n                normalize(options);\n                that._midnight = that._calculateMidnight(options.min, options.max);\n                currentValue = options.value || that._value || that.dateView._current;\n                if (min && !isEqualDatePart(min, currentValue)) {\n                    min = new DATE(MIN);\n                }\n                if (max && !isEqualDatePart(max, currentValue)) {\n                    max = new DATE(MAX);\n                }\n                that.dateView.setOptions(options);\n                that.timeView.setOptions(extend({}, options, {\n                    format: options.timeFormat,\n                    min: min,\n                    max: max\n                }));\n                that._createDateInput(options);\n                if (!that._dateInput) {\n                    that.element.val(kendo.toString(value, options.format, options.culture));\n                }\n                if (value) {\n                    that._updateARIA(value);\n                }\n            },\n            _editable: function (options) {\n                var that = this, element = that.element.off(ns), dateIcon = that._dateIcon.off(ns), timeIcon = that._timeIcon.off(ns), wrapper = that._inputWrapper.off(ns), readonly = options.readonly, disable = options.disable;\n                if (!readonly && !disable) {\n                    wrapper.addClass(DEFAULT).removeClass(STATEDISABLED).on(HOVEREVENTS, that._toggleHover);\n                    if (element && element.length) {\n                        element[0].removeAttribute(DISABLED);\n                        element[0].removeAttribute(READONLY, false);\n                        element[0].removeAttribute(ARIA_DISABLED, false);\n                    }\n                    element.on('keydown' + ns, $.proxy(that._keydown, that)).on('focus' + ns, function () {\n                        that._inputWrapper.addClass(FOCUSED);\n                    }).on('focusout' + ns, function () {\n                        that._inputWrapper.removeClass(FOCUSED);\n                        if (element.val() !== that._oldText) {\n                            that._change(element.val());\n                            if (!element.val()) {\n                                that.dateView.current(kendo.calendar.getToday());\n                            }\n                        }\n                        if (that.options.singlePopup) {\n                            return;\n                        }\n                        that.close('date');\n                        that.close('time');\n                    });\n                    dateIcon.on(MOUSEDOWN, preventDefault).on(UP, function (e) {\n                        that.toggle('date');\n                        that._focusElement(e.type);\n                    });\n                    timeIcon.on(MOUSEDOWN, preventDefault).on(UP, function (e) {\n                        that.toggle('time');\n                        that._focusElement(e.type);\n                    });\n                } else {\n                    wrapper.addClass(disable ? STATEDISABLED : DEFAULT).removeClass(disable ? DEFAULT : STATEDISABLED);\n                    element.attr(DISABLED, disable).attr(READONLY, readonly).attr(ARIA_DISABLED, disable);\n                }\n            },\n            _focusElement: function (eventType) {\n                var element = this.element;\n                if ((!support.touch || support.mouseAndTouchPresent && !(eventType || '').match(/touch/i)) && element[0] !== activeElement()) {\n                    element.trigger('focus');\n                }\n            },\n            readonly: function (readonly) {\n                this._editable({\n                    readonly: readonly === undefined ? true : readonly,\n                    disable: false\n                });\n            },\n            enable: function (enable) {\n                this._editable({\n                    readonly: false,\n                    disable: !(enable = enable === undefined ? true : enable)\n                });\n            },\n            destroy: function () {\n                var that = this;\n                Widget.fn.destroy.call(that);\n                that.dateView.destroy();\n                that.timeView.destroy();\n                if (that.options.singlePopup) {\n                    that.popup.element.off(ns);\n                    that.popup.destroy();\n                }\n                that.element.off(ns);\n                that._dateIcon.off(ns);\n                that._timeIcon.off(ns);\n                that._inputWrapper.off(ns);\n                if (that._form) {\n                    that._form.off('reset', that._resetHandler);\n                }\n            },\n            close: function (view) {\n                if (this.options.singlePopup) {\n                    this.popup.close();\n                } else {\n                    if (view !== 'time') {\n                        view = 'date';\n                    }\n                    this[view + 'View'].close();\n                }\n            },\n            open: function (view) {\n                var that = this;\n                var popupHovered;\n                if (that.options.singlePopup) {\n                    that.dateView._calendar();\n                    if (that.timeView.ul.find('li').length < 1) {\n                        that.timeView.bind();\n                    }\n                    popupHovered = that.popup._hovered;\n                    that.popup._hovered = true;\n                    that.popup.open();\n                    if (view === 'time') {\n                        that._switchToTimeView();\n                    } else {\n                        that._switchToDateView();\n                    }\n                    this._dateIcon.toggle(view !== 'time');\n                    this._timeIcon.toggle(view === 'time');\n                    setTimeout(function () {\n                        that.popup._hovered = popupHovered;\n                    }, 1);\n                } else {\n                    if (view !== 'time') {\n                        view = 'date';\n                    }\n                    this[view + 'View'].open();\n                }\n            },\n            min: function (value) {\n                return this._option('min', value);\n            },\n            max: function (value) {\n                return this._option('max', value);\n            },\n            toggle: function (view) {\n                if (this.options.singlePopup) {\n                    if (this.popup.visible()) {\n                        this.close();\n                    } else {\n                        this.open(view);\n                    }\n                } else {\n                    var secondView = 'timeView';\n                    if (view !== 'time') {\n                        view = 'date';\n                    } else {\n                        secondView = 'dateView';\n                    }\n                    this[view + 'View'].toggle();\n                    this[secondView].close();\n                }\n            },\n            value: function (value) {\n                var that = this;\n                if (value === undefined) {\n                    return that._value;\n                }\n                that._old = that._update(value);\n                if (that._old === null) {\n                    that.element.val('');\n                }\n                that._oldText = that.element.val();\n            },\n            _change: function (value) {\n                var that = this, oldValue = that.element.val(), dateChanged;\n                value = that._update(value);\n                dateChanged = +that._old != +value;\n                var valueUpdated = dateChanged && !that._typing;\n                var textFormatted = oldValue !== that.element.val();\n                if (valueUpdated || textFormatted) {\n                    that.element.trigger(CHANGE);\n                }\n                if (dateChanged) {\n                    that._old = value;\n                    that._oldText = that.element.val();\n                    that.trigger(CHANGE);\n                }\n                that._typing = false;\n            },\n            _option: function (option, value) {\n                var that = this;\n                var options = that.options;\n                var timeView = that.timeView;\n                var timeViewOptions = timeView.options;\n                var current = that._value || that._old;\n                var minDateEqual;\n                var maxDateEqual;\n                if (value === undefined) {\n                    return options[option];\n                }\n                value = parse(value, options.parseFormats, options.culture);\n                if (!value) {\n                    return;\n                }\n                if (options.min.getTime() === options.max.getTime()) {\n                    timeViewOptions.dates = [];\n                }\n                options[option] = new DATE(value.getTime());\n                that.dateView[option](value);\n                that._midnight = that._calculateMidnight(options.min, options.max);\n                if (current) {\n                    minDateEqual = isEqualDatePart(options.min, current);\n                    maxDateEqual = isEqualDatePart(options.max, current);\n                }\n                if (minDateEqual || maxDateEqual) {\n                    timeViewOptions[option] = value;\n                    if (minDateEqual && !maxDateEqual) {\n                        timeViewOptions.max = lastTimeOption(options.interval);\n                    }\n                    if (maxDateEqual) {\n                        if (that._midnight) {\n                            timeView.dataBind([MAX]);\n                            return;\n                        } else if (!minDateEqual) {\n                            timeViewOptions.min = MIN;\n                        }\n                    }\n                } else {\n                    timeViewOptions.max = MAX;\n                    timeViewOptions.min = MIN;\n                }\n                timeView.bind();\n            },\n            _toggleHover: function (e) {\n                $(e.currentTarget).toggleClass(HOVER, e.type === 'mouseenter');\n            },\n            _update: function (value) {\n                var that = this, options = that.options, min = options.min, max = options.max, dates = options.dates, timeView = that.timeView, current = that._value, date = parse(value, options.parseFormats, options.culture), isSameType = date === null && current === null || date instanceof Date && current instanceof Date, rebind, timeViewOptions, old, skip, formattedValue;\n                if (options.disableDates && options.disableDates(date)) {\n                    date = null;\n                    if (!that._old && !that.element.val()) {\n                        value = null;\n                    }\n                }\n                if (+date === +current && isSameType) {\n                    formattedValue = kendo.toString(date, options.format, options.culture);\n                    if (formattedValue !== value) {\n                        that.element.val(date === null ? value : formattedValue);\n                        if (value instanceof String) {\n                            that.element.trigger(CHANGE);\n                        }\n                    }\n                    return date;\n                }\n                if (date !== null && isEqualDatePart(date, min)) {\n                    date = restrictValue(date, min, max);\n                } else if (!isInRange(date, min, max)) {\n                    date = null;\n                }\n                that._value = date;\n                timeView.value(date);\n                that.dateView.value(date);\n                if (date) {\n                    old = that._old;\n                    timeViewOptions = timeView.options;\n                    if (dates[0]) {\n                        dates = $.grep(dates, function (d) {\n                            return isEqualDatePart(date, d);\n                        });\n                        if (dates[0]) {\n                            timeView.dataBind(dates);\n                            skip = true;\n                        }\n                    }\n                    if (!skip) {\n                        if (isEqualDatePart(date, min)) {\n                            timeViewOptions.min = min;\n                            timeViewOptions.max = lastTimeOption(options.interval);\n                            rebind = true;\n                        }\n                        if (isEqualDatePart(date, max)) {\n                            if (that._midnight) {\n                                timeView.dataBind([MAX]);\n                                skip = true;\n                            } else {\n                                timeViewOptions.max = max;\n                                if (!rebind) {\n                                    timeViewOptions.min = MIN;\n                                }\n                                rebind = true;\n                            }\n                        }\n                    }\n                    if (!skip && (!old && rebind || old && !isEqualDatePart(old, date))) {\n                        if (!rebind) {\n                            timeViewOptions.max = MAX;\n                            timeViewOptions.min = MIN;\n                        }\n                        timeView.bind();\n                    }\n                }\n                if (that._dateInput && date) {\n                    that._dateInput.value(date || value);\n                } else {\n                    that.element.val(kendo.toString(date || value, options.format, options.culture));\n                }\n                that._updateARIA(date);\n                return date;\n            },\n            _keydown: function (e) {\n                var that = this, dateView = that.dateView, timeView = that.timeView, value = that.element.val(), isDateViewVisible = that.options.singlePopup ? that.popup.visible() : dateView.popup.visible();\n                var stopPropagation = that._dateInput && e.stopImmediatePropagation;\n                if (e.altKey && e.keyCode === kendo.keys.DOWN) {\n                    that.toggle(isDateViewVisible ? 'time' : 'date');\n                } else if (isDateViewVisible) {\n                    dateView.move(e);\n                    that._updateARIA(dateView._current);\n                } else if (!that.options.singlePopup && timeView.popup.visible()) {\n                    timeView.move(e);\n                } else if (e.keyCode === kendo.keys.ENTER && value !== that._oldText) {\n                    that._change(value);\n                } else {\n                    that._typing = true;\n                    stopPropagation = false;\n                }\n                if (stopPropagation) {\n                    e.stopImmediatePropagation();\n                }\n            },\n            _views: function () {\n                var that = this, element = that.element, options = that.options, id = element.attr('id'), dateView, timeView, div, ul, msMin, date, timeDiv, omitPopup, timeViewOptions;\n                if (options.singlePopup) {\n                    options.dateDiv = that.popup.element.find('.k-datetime-calendar-wrap');\n                    timeDiv = that.popup.element.find('.k-datetime-time-wrap');\n                    options.omitPopup = omitPopup = true;\n                    timeViewOptions = options.timeView;\n                }\n                that.dateView = dateView = new kendo.DateView(extend({}, options, {\n                    id: id,\n                    anchor: that.wrapper,\n                    change: function () {\n                        var value = that._applyDateValue();\n                        if (options.singlePopup) {\n                            if (!that.timeView._currentlySelected) {\n                                that.timeView._currentlySelected = new Date();\n                            }\n                            that.timeView._currentlySelected.setFullYear(value.getFullYear());\n                            that.timeView._currentlySelected.setMonth(value.getMonth());\n                            that.timeView._currentlySelected.setDate(value.getDate());\n                            that._switchToTimeView();\n                            that._toggleIcons();\n                        } else {\n                            that._change(value);\n                            that.close('date');\n                        }\n                    },\n                    close: function (e) {\n                        if (that.trigger(CLOSE, dateViewParams)) {\n                            e.preventDefault();\n                        } else {\n                            element.attr(ARIA_EXPANDED, false);\n                            div.attr(ARIA_HIDDEN, true);\n                            if (!that.options.singlePopup && !timeView.popup.visible()) {\n                                if (element && element.length) {\n                                    element[0].removeAttribute(ARIA_OWNS);\n                                }\n                            }\n                        }\n                    },\n                    open: function (e) {\n                        if (that.trigger(OPEN, dateViewParams)) {\n                            e.preventDefault();\n                        } else {\n                            if (element.val() !== that._oldText) {\n                                date = parse(element.val(), options.parseFormats, options.culture);\n                                that.dateView[date ? 'current' : 'value'](date);\n                            }\n                            div.attr(ARIA_HIDDEN, false);\n                            element.attr(ARIA_EXPANDED, true).attr(ARIA_OWNS, dateView._dateViewID);\n                            that._updateARIA(date);\n                        }\n                    }\n                }));\n                div = dateView.div;\n                msMin = options.min.getTime();\n                that.timeView = timeView = new TimeView({\n                    id: id,\n                    value: options.value,\n                    anchor: that.wrapper,\n                    animation: options.animation,\n                    format: options.timeFormat,\n                    culture: options.culture,\n                    height: options.componentType === 'modern' ? null : options.height,\n                    interval: options.interval,\n                    min: options.componentType === 'modern' ? options.min : new DATE(MIN),\n                    max: options.componentType === 'modern' ? options.max : new DATE(MAX),\n                    dates: msMin === options.max.getTime() ? [new Date(msMin)] : [],\n                    parseFormats: options.parseFormats,\n                    validateDate: true,\n                    change: function (value, trigger) {\n                        value = that._applyTimeValue(value);\n                        if (trigger) {\n                            that._timeSelected = true;\n                            that._change(value);\n                        } else {\n                            element.val(kendo.toString(value, options.format, options.culture));\n                            dateView.value(value);\n                            that._updateARIA(value);\n                        }\n                    },\n                    close: function (e) {\n                        if (that.trigger(CLOSE, timeViewParams)) {\n                            e.preventDefault();\n                        } else {\n                            ul.attr(ARIA_HIDDEN, true);\n                            element.attr(ARIA_EXPANDED, false);\n                            if (!dateView.popup.visible()) {\n                                if (element && element.length) {\n                                    element[0].removeAttribute(ARIA_OWNS);\n                                }\n                            }\n                        }\n                    },\n                    open: function (e) {\n                        if (that.options.componentType !== 'modern') {\n                            timeView._adjustListWidth();\n                        } else {\n                            that.timeView._updateTitle();\n                        }\n                        if (that.trigger(OPEN, timeViewParams)) {\n                            e.preventDefault();\n                        } else {\n                            if (element.val() !== that._oldText) {\n                                date = parse(element.val(), options.parseFormats, options.culture);\n                                that.timeView.value(date);\n                            }\n                            ul.attr(ARIA_HIDDEN, false);\n                            element.attr(ARIA_EXPANDED, true).attr(ARIA_OWNS, timeView._timeViewID);\n                            timeView.options.active(timeView.current());\n                        }\n                    },\n                    active: function (current) {\n                        if (element && element.length) {\n                            element[0].removeAttribute(ARIA_ACTIVEDESCENDANT);\n                        }\n                        if (current) {\n                            element.attr(ARIA_ACTIVEDESCENDANT, timeView._optionID);\n                        }\n                    },\n                    popup: options.popup,\n                    useValueToRender: true,\n                    specifiedRange: that._specifiedRange,\n                    omitPopup: omitPopup,\n                    timeDiv: timeDiv,\n                    timeView: timeViewOptions\n                });\n                ul = timeView.ul;\n            },\n            _applyDateValue: function () {\n                var that = this;\n                var options = that.options;\n                var dateView = that.dateView;\n                var value = dateView.calendar.value();\n                var msValue = +value;\n                var msMin = +options.min;\n                var msMax = +options.max;\n                var current, adjustedDate;\n                if (msValue === msMin || msValue === msMax) {\n                    current = msValue === msMin ? msMin : msMax;\n                    current = new DATE(that._value || current);\n                    current.setFullYear(value.getFullYear(), value.getMonth(), value.getDate());\n                    if (isInRange(current, msMin, msMax)) {\n                        value = current;\n                    }\n                }\n                if (that._value) {\n                    adjustedDate = kendo.date.setHours(new Date(value), that._value);\n                    if (isInRange(adjustedDate, msMin, msMax)) {\n                        value = adjustedDate;\n                    }\n                }\n                return value;\n            },\n            _applyTimeValue: function (value) {\n                var timeView = this.timeView;\n                var options = this.options;\n                value = timeView._parse(value);\n                if (value < options.min) {\n                    value = new DATE(+options.min);\n                    timeView.options.min = value;\n                } else if (value > options.max) {\n                    value = new DATE(+options.max);\n                    timeView.options.max = value;\n                }\n                return value;\n            },\n            _icons: function () {\n                var that = this;\n                var element = that.element;\n                var options = that.options;\n                var icons;\n                icons = element.next('span.k-select');\n                if (!icons[0]) {\n                    icons = $('<span unselectable=\"on\" class=\"k-select\">' + '<span class=\"k-link k-link-date\" aria-label=\"' + options.dateButtonText + '\"><span unselectable=\"on\" class=\"k-icon k-i-calendar\"></span></span>' + '<span class=\"k-link k-link-time\" aria-label=\"' + options.timeButtonText + '\"><span unselectable=\"on\" class=\"k-icon k-i-clock\"></span></span>' + '</span>').insertAfter(element);\n                }\n                icons = icons.children();\n                that._dateIcon = icons.eq(0).attr('aria-controls', that.dateView._dateViewID);\n                that._timeIcon = icons.eq(1).attr('aria-controls', that.timeView._timeViewID);\n                if (options.singlePopup) {\n                    that._timeIcon.hide();\n                }\n            },\n            _wrapper: function () {\n                var that = this, element = that.element, wrapper;\n                wrapper = element.parents('.k-datetimepicker');\n                if (!wrapper[0]) {\n                    wrapper = element.wrap(SPAN).parent().addClass('k-picker-wrap k-state-default');\n                    wrapper = wrapper.wrap(SPAN).parent();\n                }\n                wrapper[0].style.cssText = element[0].style.cssText;\n                element.css({\n                    width: '100%',\n                    height: element[0].style.height\n                });\n                that.wrapper = wrapper.addClass('k-widget k-datetimepicker').addClass(element[0].className).removeClass('input-validation-error');\n                that._inputWrapper = $(wrapper[0].firstChild);\n            },\n            _reset: function () {\n                var that = this, element = that.element, formId = element.attr('form'), form = formId ? $('#' + formId) : element.closest('form'), options = that.options, disabledDate = options.disableDates, parseFormats = options.parseFormats.length ? options.parseFormats : null, optionsValue = that._initialOptions.value, initialValue = element[0].defaultValue;\n                if (optionsValue && (disabledDate && disabledDate(optionsValue))) {\n                    optionsValue = null;\n                }\n                if ((!initialValue || !kendo.parseDate(initialValue, parseFormats, options.culture)) && optionsValue) {\n                    element.attr('value', kendo.toString(optionsValue, options.format, options.culture));\n                }\n                if (form[0]) {\n                    that._resetHandler = function () {\n                        that.value(optionsValue || element[0].defaultValue);\n                        that.max(that._initialOptions.max);\n                        that.min(that._initialOptions.min);\n                    };\n                    that._form = form.on('reset', that._resetHandler);\n                }\n            },\n            _template: function () {\n                this._ariaTemplate = kendo.template(this.options.ARIATemplate);\n            },\n            _createDateInput: function (options) {\n                if (this._dateInput) {\n                    this._dateInput.destroy();\n                    this._dateInput = null;\n                }\n                if (options.dateInput) {\n                    this._dateInput = new ui.DateInput(this.element, {\n                        culture: options.culture,\n                        format: options.format,\n                        min: options.min,\n                        max: options.max,\n                        interval: options.interval\n                    });\n                }\n            },\n            _calculateMidnight: function (min, max) {\n                return getMilliseconds(min) + getMilliseconds(max) === 0;\n            },\n            _updateARIA: function (date) {\n                var cell;\n                var that = this;\n                var calendar = that.dateView.calendar;\n                if (that.element && that.element.length) {\n                    that.element[0].removeAttribute(ARIA_ACTIVEDESCENDANT);\n                }\n                if (calendar) {\n                    cell = calendar._cell;\n                    cell.attr('aria-label', that._ariaTemplate({ current: date || calendar.current() }));\n                    that.element.attr(ARIA_ACTIVEDESCENDANT, cell.attr('id'));\n                }\n            },\n            _popup: function () {\n                var that = this;\n                var options = that.options;\n                var div = $('<div></div>').attr(ARIA_HIDDEN, 'true').addClass('k-datetime-container k-group k-reset').appendTo(document.body);\n                div.append(SINGLE_POPUP_TEMPLATE);\n                that.popup = new ui.Popup(div, extend(options.popup, options, {\n                    name: 'Popup',\n                    isRtl: kendo.support.isRtl(that.wrapper),\n                    anchor: that.wrapper,\n                    activate: function () {\n                        if (that.options.timeView && that.options.timeView.list === 'scroll') {\n                            that.timeView.addTranslate();\n                            that.timeView.applyValue(that._value);\n                            that.timeView._updateRanges();\n                        }\n                    },\n                    open: function () {\n                        that.timeView._updateTitle();\n                    }\n                }));\n                div.on(CLICK + ns, '.k-datetime-buttongroup .k-button', $.proxy(that._groupChangeClick, that));\n                div.on(CLICK + ns, '.k-datetime-footer button.k-time-cancel', $.proxy(that._cancelClickHandler, that));\n                div.on(CLICK + ns, '.k-datetime-footer button.k-time-accept', $.proxy(that._setClickHandler, that));\n            },\n            _groupChangeClick: function (e) {\n                preventDefault(e);\n                var button = $(e.currentTarget);\n                var index = button.index();\n                if (index) {\n                    this._switchToTimeView();\n                } else {\n                    this._switchToDateView();\n                }\n                this._toggleIcons();\n            },\n            _switchToDateView: function () {\n                this.popup.element.find('.k-group-start, .k-group-end').removeClass(STATE_ACTIVE).eq(0).addClass(STATE_ACTIVE);\n                this.popup.element.find('.k-datetime-wrap').removeClass('k-time-tab').addClass('k-date-tab');\n            },\n            _switchToTimeView: function () {\n                this.timeView._updateRanges();\n                this.popup.element.find('.k-group-start, .k-group-end').removeClass(STATE_ACTIVE).eq(1).addClass(STATE_ACTIVE);\n                this.popup.element.find('.k-datetime-wrap').removeClass('k-date-tab').addClass('k-time-tab');\n            },\n            _toggleIcons: function () {\n                this._dateIcon.toggle();\n                this._timeIcon.toggle();\n            },\n            _cancelClickHandler: function () {\n                if (this._value) {\n                    this.value(this._value);\n                    this.dateView.value(this._value);\n                }\n                this.popup.close();\n            },\n            _setClickHandler: function () {\n                var value = this._applyDateValue();\n                var time = this.timeView._currentlySelected || new Date();\n                value = value || new Date();\n                this.timeView._updateCurrentlySelected();\n                value.setHours(time.getHours());\n                value.setMinutes(time.getMinutes());\n                value.setSeconds(time.getSeconds());\n                value = this._applyTimeValue(value);\n                this._change(value);\n                this.popup.close();\n            }\n        });\n        function lastTimeOption(interval) {\n            var date = new Date(2100, 0, 1);\n            date.setMinutes(-interval);\n            return date;\n        }\n        function preventDefault(e) {\n            e.preventDefault();\n        }\n        function normalize(options) {\n            var patterns = kendo.getCulture(options.culture).calendars.standard.patterns, parseFormats = !options.parseFormats.length, timeFormat;\n            options.format = extractFormat(options.format || patterns.g);\n            options.timeFormat = timeFormat = extractFormat(options.timeFormat || patterns.t);\n            kendo.DateView.normalize(options);\n            if (parseFormats) {\n                options.parseFormats.unshift('yyyy-MM-ddTHH:mm:ss');\n            }\n            if ($.inArray(timeFormat, options.parseFormats) === -1) {\n                options.parseFormats.push(timeFormat);\n            }\n        }\n        ui.plugin(DateTimePicker);\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}